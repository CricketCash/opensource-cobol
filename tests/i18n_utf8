#! /bin/sh
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH


SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"

# Load the config file.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || { echo "$as_me: error: invalid content: $at_file" >&2
   { (exit 1); exit 1; }; }
done

# atconfig delivers paths relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir in srcdir top_srcdir top_builddir
  do
    at_val=`eval echo '${'at_$at_dir'}'`
    eval "$at_dir=\$at_val/../.."
  done
fi

# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?
at_verbose=:
at_quiet=echo

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# List test groups?
at_list_p=false
# Test groups to run
at_groups=

# The directory we are in.
at_dir=`pwd`
# The directory the whole suite works in.
# Should be absolutely to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite.
at_suite_log=$at_dir/$as_me.log
# The file containing the location of the last AT_CHECK.
at_check_line_file=$at_suite_dir/at-check-line
# The file containing the exit status of the last command.
at_status_file=$at_suite_dir/at-status
# The files containing the output of the tested commands.
at_stdout=$at_suite_dir/at-stdout
at_stder1=$at_suite_dir/at-stder1
at_stderr=$at_suite_dir/at-stderr
# The file containing dates.
at_times_file=$at_suite_dir/at-times

# List of the tested programs.
at_tested='cobc'
# List of the all the test groups.
at_groups_all=' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107'
# As many dots as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='...'
# Description of all the test groups.
at_help_all='1;user-defined-word.at:1;Program name;;
2;user-defined-word.at:14;Field name;;
3;user-defined-word.at:33;Long field name;;
4;user-defined-word.at:58;Field lookup;;
5;user-defined-word.at:77;Section name;;
6;user-defined-word.at:99;Long section name;;
7;user-defined-word.at:121;Too long section name;;
8;user-defined-word.at:145;Nihongo Filename;;
9;pic-x.at:1;Value clause;;
10;pic-x.at:19;Move;;
11;pic-x.at:38;Move with trunc;;
12;pic-x.at:60;Move ALL with trunc and trimming;;
13;pic-x.at:80;Move with trunc and trimming 1;;
14;pic-x.at:103;Move with trunc and trimming 2;;
15;pic-x.at:126;Move from field with trunc and trimming 1;;
16;pic-x.at:147;Move with padding;;
17;pic-x.at:166;Move with justify;;
18;pic-x.at:185;Move to alnum EDITED;;
19;pic-x.at:204;Move to alnum EDITED (pic too short);;
20;pic-x.at:226;Move to alnum EDITED (pic too long);;
21;pic-x.at:245;Move to alnum EDITED (No char break);;
22;pic-x.at:264;Move to alnum EDITED (char break & junk chars);;
23;pic-x.at:284;Move group to group in bad alignment;;
24;pic-x.at:309;Redifinition breaking char pos.;;
25;pic-x.at:334;Ref mod(n:);;
26;pic-x.at:353;Ref mod(n:m);;
27;pic-x.at:372;STRING by size;;
28;pic-x.at:395;STRING with delimiter;;
29;pic-x.at:418;STRING with pointer;;
30;pic-x.at:442;INSPECT REPLACING;;
31;pic-x.at:461;INSPECT REPLACING by ZERO;;
32;pic-x.at:480;INSPECT TALLYING;;
33;pic-x.at:500;INSPECT CONVERTING to SPACE;;
34;pic-x.at:520;INSPECT CONVERTING 2-bytes-char to SPACE;;
35;pic-x.at:541;INSPECT CONVERTING different width chars;;
36;pic-x.at:562;INSPECT CONVERTING 2-bytes-char to SPACE (rt);;
37;pic-x.at:584;INSPECT CONVERTING different width chars (rt);;
38;pic-n.at:1;PIC N Value clause;;
39;pic-n.at:19;PIC N Value 2 bytes char;;
40;pic-n.at:37;PIC N Move;;
41;pic-n.at:56;PIC N Move 2 bytes char.;;
42;pic-n.at:76;PIC N Move with trunc;;
43;pic-n.at:98;PIC N Move with padding by full-width SPC;;
44;pic-n.at:117;PIC N Move 2 bytes char with padding;;
45;pic-n.at:137;PIC N Move with justify;;
46;pic-n.at:156;PIC N Move 2 bytes char with justify;;
47;pic-n.at:175;PIC N Move to NATIONAL EDITED;;
48;pic-n.at:194;PIC N Move with half-width alnum conv.;;
49;pic-n.at:213;PIC N Move with half-width kana conv.;;
50;pic-n.at:232;PIC N Ref mod(n:);;
51;pic-n.at:251;PIC N Ref mod(n:m);;
52;pic-n.at:270;PIC N STRING by size;;
53;pic-n.at:293;PIC N STRING with delimiter (causes warn);;
54;pic-n.at:316;PIC N STRING with NATIONAL delimiter;;
55;pic-n.at:339;PIC N STRING with pointer;;
56;pic-n.at:363;PIC N INSPECT REPLACING;;
57;pic-n.at:382;PIC N INSPECT REPLACING by ZERO;;
58;pic-n.at:401;PIC N INSPECT REPLACING by NATIONAL ZERO;;
59;pic-n.at:420;PIC N INSPECT TALLYING;;
60;pic-n.at:440;PIC N Move with half-width dakuten kana.;;
61;pic-n.at:459;PIC N Move with half-width han-dakuten kana.;;
62;pic-bn.at:1;PIC BN Value clause;;
63;pic-bn.at:19;PIC BN Move;;
64;pic-bn.at:38;PIC BN Refmod char by char;;
65;program-id.at:1;PROGRAM-ID NATIONAL C89 no warning;;
66;program-id.at:20;PROGRAM-ID NATIONAL C89 warning;;
67;program-id.at:42;PROGRAM-ID NATIONAL C89 ignore;;
68;program-id.at:56;PROGRAM-ID NATIONAL 32 character no over;;
69;program-id.at:71;PROGRAM-ID NATIONAL 32 character over;;
70;error-print.at:1;undefined not message;;
71;error-print.at:24;Encoding alphanumeric name item;;
72;error-print.at:41;Encoding national name item;;
73;stored-char-length.at:1;FUNCTION STORED-CHAR-LENGTH(PIC X);;
74;stored-char-length.at:22;FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPC;;
75;stored-char-length.at:43;FUNCTION STORED-CHAR-LENGTH(PIC X) /w wSPC;;
76;stored-char-length.at:64;FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPCs;;
77;stored-char-length.at:85;FUNCTION STORED-CHAR-LENGTH(PIC N);;
78;stored-char-length.at:106;FUNCTION STORED-CHAR-LENGTH(SINGLE-BYTE SPACE);;
79;stored-char-length.at:127;FUNCTION STORED-CHAR-LENGTH(DOUBLE-BYTE SPACE);;
80;warn-mixture-byte.at:1;STRING Alphanumeric to National;;
81;warn-mixture-byte.at:21;STRING National to Alphanumeric;;
82;limits.at:1;Field length limit PIC A/VALID;;
83;limits.at:17;Field length limit PIC A/TOO LONG;;
84;limits.at:35;Field length limit PIC X/VALID;;
85;limits.at:51;Field length limit PIC X/TOO LONG;;
86;limits.at:69;Field length limit PIC B9/VALID;;
87;limits.at:85;Field length limit PIC B9/TOO LONG;;
88;limits.at:103;Field length limit PIC B/VALID;;
89;limits.at:119;Field length limit PIC B/TOO LONG;;
90;limits.at:137;Field length limit PIC BA/VALID;;
91;limits.at:153;Field length limit PIC BA/TOO LONG;;
92;limits.at:171;Field length limit PIC BX/VALID;;
93;limits.at:187;Field length limit PIC BX/TOO LONG;;
94;limits.at:205;Field length limit PIC N/VALID (UTF-8);;
95;limits.at:221;Field length limit PIC N/TOO LONG (UTF-8);;
96;limits.at:239;Field length limit PIC BN/VALID (UTF-8);;
97;limits.at:255;Field length limit PIC BN/TOO LONG (UTF-8);;
98;national.at:1;FUNCTION NATIONAL single-byte;;
99;national.at:22;FUNCTION NATIONAL multi-byte;;
100;national.at:43;FUNCTION NATIONAL KIGOU-exclamation;;
101;national.at:64;FUNCTION NATIONAL KIGOU-yen;;
102;national.at:85;FUNCTION NATIONAL KIGOU-plus;;
103;national.at:106;FUNCTION NATIONAL (HanKana w/ Daku-on);;
104;national.at:127;FUNCTION NATIONAL (HanKana w/ Han-daku-on);;
105;mb-space.at:1;Zenkaku SPC delims in headings;;
106;mb-space.at:19;Zenkaku SPC delims in record def;;
107;mb-space.at:43;Zenkaku SPC delims in COPY stmt;;
'

at_keywords=
at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  at_optarg=`expr "x$at_option" : 'x[^=]*=\(.*\)'`

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	echo "$as_me (OpenCOBOL 1.1)"
	exit 0
	;;

    --clean | -c )
	rm -rf $at_suite_dir $at_suite_log
	exit 0
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=echo; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -vx'; at_traceoff='set +vx'
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_groups="$at_groups$at_option "
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d '-'`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's,^.* '$at_range_start' ,'$at_range_start' ,'`
	at_groups="$at_groups$at_range "
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d '-'`
	at_range=`echo " $at_groups_all " | \
	  sed -e 's, '$at_range_end' .*$, '$at_range_end','`
	at_groups="$at_groups$at_range "
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`echo $at_option |sed 's,-.*,,'`
	at_range_end=`echo $at_option |sed 's,.*-,,'`
	# FIXME: Maybe test to make sure start <= end?
	at_range=`echo " $at_groups_all " | \
	  sed -e 's,^.* '$at_range_start' ,'$at_range_start' ,' \
	      -e 's, '$at_range_end' .*$, '$at_range_end','`
	at_groups="$at_groups$at_range "
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_keywords="$at_keywords,$at_optarg"
	;;

    *=*)
  	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
  	# Reject names that are not valid shell variable names.
  	expr "x$at_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
  	  { echo "$as_me: error: invalid variable name: $at_envvar" >&2
   { (exit 1); exit 1; }; }
  	at_value=`echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
  	eval "$at_envvar='$at_value'"
  	export $at_envvar
	# Propagate to debug scripts.
  	at_debug_args="$at_debug_args $at_option"
  	;;

     *) echo "$as_me: invalid option: $at_option" >&2
	echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Process the --keywords
if test -n "$at_keywords"; then
  at_groups_selected=$at_help_all
  for at_keyword in `IFS=,; set X $at_keywords; shift; echo ${1+$@}`
  do
    # It is on purpose that we match the test group titles too.
    at_groups_selected=`echo "$at_groups_selected" |
			grep -i "^[^;]*;[^;]*.*[; ]$at_keyword[ ;]"`
  done
  at_groups_selected=`echo "$at_groups_selected" | sed 's/;.*//'`
  # Smash the end of lines.
  at_groups_selected=`echo $at_groups_selected`
  at_groups="$at_groups$at_groups_selected "
fi

# Selected test groups.
test -z "$at_groups" && at_groups=$at_groups_all

# Help message.
if $at_help_p; then
  cat <<_ATEOF
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, and save a detailed log file.
Upon failure, create debugging scripts.

You should not change environment variables unless explicitly passed
as command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relatively to the top level of this distribution.  E.g.,

  $ $0 AUTOTEST_PATH=bin

possibly amounts into

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH
_ATEOF
cat <<_ATEOF

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF

Execution tuning:
  -k, --keywords=KEYWORDS
	         select the tests matching all the comma separated KEYWORDS
	         accumulates
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
	         default for debugging scripts
  -d, --debug    inhibit clean up and debug script creation
	         default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF

Report bugs to <open-cobol-list@lists.sourceforge.net>.
_ATEOF
  exit 0
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF
OpenCOBOL 1.1 test suite: I18n utf-8 Tests test groups:

 NUM: FILENAME:LINE      TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # "  1 42  45 " => "^(1|42|45);".
  at_groups_pattern=`echo "$at_groups" | sed 's/^  *//;s/  *$//;s/  */|/g'`
  echo "$at_help_all" |
    awk 'BEGIN { FS = ";" }
	 { if ($1 !~ /^('"$at_groups_pattern"')$/) next }
	 { if ($1) printf " %3d: %-18s %s\n", $1, $2, $3
	   if ($4) printf "      %s\n", $4 } '
  exit 0
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites, AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
AUTOTEST_PATH=`echo $AUTOTEST_PATH | tr ':' $PATH_SEPARATOR`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  case $as_dir in
  [\\/]* | ?:[\\/]* )
    at_path=$at_path$PATH_SEPARATOR$as_dir
    ;;
  * )
    if test -z "$at_top_builddir"; then
      # Stand-alone test suite.
      at_path=$at_path$PATH_SEPARATOR$as_dir
    else
      # Embedded test suite.
      at_path=$at_path$PATH_SEPARATOR$at_top_builddir/$as_dir
      at_path=$at_path$PATH_SEPARATOR$at_top_srcdir/$as_dir
    fi
    ;;
esac
done


# Now build and simplify PATH.
PATH=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_dir=`(cd "$as_dir" && pwd) 2>/dev/null`
test -d "$as_dir" || continue
case $PATH in
	          $as_dir                 | \
	          $as_dir$PATH_SEPARATOR* | \
  *$PATH_SEPARATOR$as_dir                 | \
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR* ) ;;

  '') PATH=$as_dir ;;
   *) PATH=$PATH$PATH_SEPARATOR$as_dir ;;
esac
done

export PATH

# Setting up the FDs.
# 5 is the log file.  Not to be overwritten if `-d'.

$at_debug_p && at_suite_log=/dev/null
exec 5>$at_suite_log

# Banners and logs.
cat <<\_ASBOX
## ------------------------------------------- ##
## OpenCOBOL 1.1 test suite: I18n utf-8 Tests. ##
## ------------------------------------------- ##
_ASBOX
{
  cat <<\_ASBOX
## ------------------------------------------- ##
## OpenCOBOL 1.1 test suite: I18n utf-8 Tests. ##
## ------------------------------------------- ##
_ASBOX
  echo

  echo "$as_me: command line was:"
  echo "  $ $0 $at_cli_args"
  echo

  # Try to find a few ChangeLogs in case it might help determining the
  # exact version.  Use the relative dir: if the top dir is a symlink,
  # find will not follow it (and options to follow the links are not
  # portable), which would result in no output here.
  if test -n "$at_top_srcdir"; then
    cat <<\_ASBOX
## ----------- ##
## ChangeLogs. ##
## ----------- ##
_ASBOX
    echo
    for at_file in `find "$at_top_srcdir" -name ChangeLog -print`
    do
      echo "$as_me: $at_file:"
      sed 's/^/| /;10q' $at_file
      echo
    done

    {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  echo "PATH: $as_dir"
done

}
    echo
  fi

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done

  cat <<\_ASBOX
## ---------------- ##
## Tested programs. ##
## ---------------- ##
_ASBOX
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -f $as_dir/$at_program && break
done

  if test -f $as_dir/$at_program; then
    {
      echo "i18n_utf8.at:21: $as_dir/$at_program --version"
      $as_dir/$at_program --version
      echo
    } >&5 2>&1
  else
    { { echo "$as_me:$LINENO: error: cannot find $at_program" >&5
echo "$as_me: error: cannot find $at_program" >&2;}
   { (exit 1); exit 1; }; }
  fi
done

{
  cat <<\_ASBOX
## ------------------ ##
## Running the tests. ##
## ------------------ ##
_ASBOX
} >&5

at_start_date=`date`
at_start_time=`(date +%s) 2>/dev/null`
echo "$as_me: starting at: $at_start_date" >&5
at_xpass_list=
at_xfail_list=
at_pass_list=
at_fail_list=
at_skip_list=
at_group_count=0

# Create the master directory if it doesn't already exist.
test -d $at_suite_dir ||
  mkdir $at_suite_dir ||
  { { echo "$as_me:$LINENO: error: cannot create $at_suite_dir" >&5
echo "$as_me: error: cannot create $at_suite_dir" >&2;}
   { (exit 1); exit 1; }; }

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  cp /dev/null $at_devnull
fi

# Use `diff -u' when possible.
if diff -u $at_devnull $at_devnull >/dev/null 2>&1; then
  at_diff='diff -u'
else
  at_diff=diff
fi


for at_group in $at_groups
do
  # Be sure to come back to the top test directory.
  cd $at_suite_dir

  case $at_group in
    banner-*)
      at_group_log=$at_suite_log
      ;;

    *)
      # Skip tests we already run (using --keywords makes it easy to get
      # duplication).
      case " $at_pass_test $at_skip_test $at_fail_test " in
	*" $at_group "* ) continue;;
      esac

      # Normalize the test group number.
      at_group_normalized=`expr "00000$at_group" : ".*\($at_format\)"`

      # Create a fresh directory for the next test group, and enter.
      at_group_dir=$at_suite_dir/$at_group_normalized
      at_group_log=$at_group_dir/$as_me.log
      rm -rf $at_group_dir
      mkdir $at_group_dir ||
	{ { echo "$as_me:$LINENO: error: cannot create $at_group_dir" >&5
echo "$as_me: error: cannot create $at_group_dir" >&2;}
   { (exit 1); exit 1; }; }
      cd $at_group_dir
      ;;
  esac

  echo 0 > $at_status_file

  # Clearly separate the test groups when verbose.
  test $at_group_count != 0 && $at_verbose

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log
  if test $at_verbose = echo; then
    at_tee_pipe="tee -a $at_group_log"
  else
    at_tee_pipe="cat >> $at_group_log"
  fi

  case $at_group in
  1 ) # 1. user-defined-word.at:1: Program name
    at_setup_line='user-defined-word.at:1'
    at_desc='Program name'
    $at_quiet $ECHO_N "  1: Program name                                 $ECHO_C"
    at_xfail=no
    (
      echo "1. user-defined-word.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      日本語のプログラム名.
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:10: \${COMPILE} -x prog.cob"
echo user-defined-word.at:10 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:10: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  2 ) # 2. user-defined-word.at:14: Field name
    at_setup_line='user-defined-word.at:14'
    at_desc='Field name'
    $at_quiet $ECHO_N "  2: Field name                                   $ECHO_C"
    at_xfail=no
    (
      echo "2. user-defined-word.at:14: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 Ｏ−文字列 PIC X(7) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE "Unicode" TO Ｏ−文字列.
           DISPLAY Ｏ−文字列 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:28: \${COMPILE} -x prog.cob"
echo user-defined-word.at:28 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:28: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "user-defined-word.at:29: ./prog"
echo user-defined-word.at:29 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "Unicode" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:29: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  3 ) # 3. user-defined-word.at:33: Long field name
    at_setup_line='user-defined-word.at:33'
    at_desc='Long field name'
    $at_quiet $ECHO_N "  3: Long field name                              $ECHO_C"
    at_xfail=no
    (
      echo "3. user-defined-word.at:33: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01   項目ＡＢＣＤＥＦＧＨ０１２３４５６７８９
            PIC X(7).
       PROCEDURE        DIVISION.
           MOVE "Unicode"
             TO
           項目ＡＢＣＤＥＦＧＨ０１２３４５６７８９.
           DISPLAY
            項目ＡＢＣＤＥＦＧＨ０１２３４５６７８９
	     WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:52: \${COMPILE} -x prog.cob"
echo user-defined-word.at:52 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "user-defined-word.at:53: ./prog"
echo user-defined-word.at:53 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "Unicode" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:53: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  4 ) # 4. user-defined-word.at:58: Field lookup
    at_setup_line='user-defined-word.at:58'
    at_desc='Field lookup'
    $at_quiet $ECHO_N "  4: Field lookup                                 $ECHO_C"
    at_xfail=no
    (
      echo "4. user-defined-word.at:58: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 項目２ PIC X(1) VALUE "A".
       01 項目Ｒ PIC X(1) VALUE "B".
       PROCEDURE        DIVISION.
           DISPLAY 項目２ 項目Ｒ WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:72: \${COMPILE} -x prog.cob"
echo user-defined-word.at:72 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:72: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "user-defined-word.at:73: ./prog"
echo user-defined-word.at:73 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "AB" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:73: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  5 ) # 5. user-defined-word.at:77: Section name
    at_setup_line='user-defined-word.at:77'
    at_desc='Section name'
    $at_quiet $ECHO_N "  5: Section name                                 $ECHO_C"
    at_xfail=no
    (
      echo "5. user-defined-word.at:77: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
       PERFORM    Ｓ−初期化.
       PERFORM    Ｓ−終了.
       Ｓ−初期化       SECTION.
           DISPLAY "Hello, " WITH NO ADVANCING.
       Ｓ−終了         SECTION.
           DISPLAY "and good bye." WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:94: \${COMPILE} -x prog.cob"
echo user-defined-word.at:94 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:94: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "user-defined-word.at:95: ./prog"
echo user-defined-word.at:95 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "Hello, and good bye." | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:95: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  6 ) # 6. user-defined-word.at:99: Long section name
    at_setup_line='user-defined-word.at:99'
    at_desc='Long section name'
    $at_quiet $ECHO_N "  6: Long section name                            $ECHO_C"
    at_xfail=no
    (
      echo "6. user-defined-word.at:99: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
       PERFORM s１２３４５６７８９０12345678901234567890.
       PERFORM    Ｓ−終了.
       s１２３４５６７８９０12345678901234567890 SECTION.
           DISPLAY "Hello, " WITH NO ADVANCING.
       Ｓ−終了         SECTION.
           DISPLAY "and good bye." WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:116: \${COMPILE} -x prog.cob"
echo user-defined-word.at:116 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:116: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "user-defined-word.at:117: ./prog"
echo user-defined-word.at:117 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "Hello, and good bye." | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:117: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  7 ) # 7. user-defined-word.at:121: Too long section name
    at_setup_line='user-defined-word.at:121'
    at_desc='Too long section name'
    $at_quiet $ECHO_N "  7: Too long section name                        $ECHO_C"
    at_xfail=no
    (
      echo "7. user-defined-word.at:121: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
       PERFORM s１２３４５６７８９０123456789012345678901.
       PERFORM    Ｓ−終了.
       s１２３４５６７８９０123456789012345678901 SECTION.
           DISPLAY "Hello, " WITH NO ADVANCING.
       Ｓ−終了         SECTION.
           DISPLAY "and good bye." WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:138: \${COMPILE} -x prog.cob"
echo user-defined-word.at:138 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:7: Error: User defined name must be less than 32 characters
prog.cob:9: Error: User defined name must be less than 32 characters
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "user-defined-word.at:138: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  8 ) # 8. user-defined-word.at:145: Nihongo Filename
    at_setup_line='user-defined-word.at:145'
    at_desc='Nihongo Filename'
    $at_quiet $ECHO_N "  8: Nihongo Filename                             $ECHO_C"
    at_xfail=no
    (
      echo "8. user-defined-word.at:145: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT テストファイル ASSIGN TO "./テスト_ファイル"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD テストファイル.
       01 TEST-KEY      PIC X(10).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT テストファイル.
           MOVE "TEST000000" TO TEST-KEY.
           WRITE TEST-KEY.
           CLOSE テストファイル.
           OPEN  INPUT  テストファイル.
           READ  テストファイル
               NOT AT END
                   DISPLAY "OK" NO ADVANCING
           END-READ.
           CLOSE テストファイル.
           STOP RUN.
_ATEOF


$at_traceoff
echo "user-defined-word.at:175: \${COMPILE} -x prog.cob"
echo user-defined-word.at:175 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:175: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "user-defined-word.at:176: ./prog"
echo user-defined-word.at:176 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "user-defined-word.at:176: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  9 ) # 9. pic-x.at:1: Value clause
    at_setup_line='pic-x.at:1'
    at_desc='Value clause'
    $at_quiet $ECHO_N "  9: Value clause                                 $ECHO_C"
    at_xfail=no
    (
      echo "9. pic-x.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(21) VALUE "日本語の文字列".
       PROCEDURE        DIVISION.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:14: \${COMPILE} -x prog.cob"
echo pic-x.at:14 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:15: ./prog"
echo pic-x.at:15 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語の文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  10 ) # 10. pic-x.at:19: Move
    at_setup_line='pic-x.at:19'
    at_desc='Move'
    $at_quiet $ECHO_N " 10: Move                                         $ECHO_C"
    at_xfail=no
    (
      echo "10. pic-x.at:19: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(21).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:33: \${COMPILE} -x prog.cob"
echo pic-x.at:33 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:34: ./prog"
echo pic-x.at:34 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語の文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:34: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  11 ) # 11. pic-x.at:38: Move with trunc
    at_setup_line='pic-x.at:38'
    at_desc='Move with trunc'
    $at_quiet $ECHO_N " 11: Move with trunc                              $ECHO_C"
    at_xfail=no
    (
      echo "11. pic-x.at:38: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(9).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:52: \${COMPILE} -x prog.cob"
echo pic-x.at:52 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Warning: Value size exceeds data size
prog.cob:6: Warning: 'F0' defined here as PIC X(9)
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:56: ./prog"
echo pic-x.at:56 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:56: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  12 ) # 12. pic-x.at:60: Move ALL with trunc and trimming
    at_setup_line='pic-x.at:60'
    at_desc='Move ALL with trunc and trimming'
    $at_quiet $ECHO_N " 12: Move ALL with trunc and trimming             $ECHO_C"
    at_xfail=no
    (
      echo "12. pic-x.at:60: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(10).
       PROCEDURE        DIVISION.
           MOVE ALL "喜" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:74: \${COMPILE} -x prog.cob"
echo pic-x.at:74 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:74: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:75: ./prog | od -x -An"
echo pic-x.at:75 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 96e5 e59c 9c96 96e5 e59c
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:75: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  13 ) # 13. pic-x.at:80: Move with trunc and trimming 1
    at_setup_line='pic-x.at:80'
    at_desc='Move with trunc and trimming 1'
    $at_quiet $ECHO_N " 13: Move with trunc and trimming 1               $ECHO_C"
    at_xfail=no
    (
      echo "13. pic-x.at:80: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(10).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:94: \${COMPILE} -x prog.cob"
echo pic-x.at:94 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Warning: Value size exceeds data size
prog.cob:6: Warning: 'F0' defined here as PIC X(10)
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:94: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:98: ./prog | od -x -An"
echo pic-x.at:98 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 97e6 e6a5 ac9c aae8 e39e
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:98: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  14 ) # 14. pic-x.at:103: Move with trunc and trimming 2
    at_setup_line='pic-x.at:103'
    at_desc='Move with trunc and trimming 2'
    $at_quiet $ECHO_N " 14: Move with trunc and trimming 2               $ECHO_C"
    at_xfail=no
    (
      echo "14. pic-x.at:103: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(11).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:117: \${COMPILE} -x prog.cob"
echo pic-x.at:117 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Warning: Value size exceeds data size
prog.cob:6: Warning: 'F0' defined here as PIC X(11)
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:117: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:121: ./prog | od -x -An"
echo pic-x.at:121 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 97e6 e6a5 ac9c aae8 e39e 0081
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:121: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  15 ) # 15. pic-x.at:126: Move from field with trunc and trimming 1
    at_setup_line='pic-x.at:126'
    at_desc='Move from field with trunc and trimming 1'
    $at_quiet $ECHO_N " 15: Move from field with trunc and trimming 1    $ECHO_C"
    at_xfail=no
    (
      echo "15. pic-x.at:126: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 FS PIC X(21) VALUE "日本語の文字列".
       01 F0 PIC X(10).
       PROCEDURE        DIVISION.
           MOVE FS TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:141: \${COMPILE} -x prog.cob"
echo pic-x.at:141 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:141: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:142: ./prog | od -x -An"
echo pic-x.at:142 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 97e6 e6a5 ac9c aae8 e39e
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:142: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  16 ) # 16. pic-x.at:147: Move with padding
    at_setup_line='pic-x.at:147'
    at_desc='Move with padding'
    $at_quiet $ECHO_N " 16: Move with padding                            $ECHO_C"
    at_xfail=no
    (
      echo "16. pic-x.at:147: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(24).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:161: \${COMPILE} -x prog.cob"
echo pic-x.at:161 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:161: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:162: ./prog"
echo pic-x.at:162 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語の文字列   " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:162: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  17 ) # 17. pic-x.at:166: Move with justify
    at_setup_line='pic-x.at:166'
    at_desc='Move with justify'
    $at_quiet $ECHO_N " 17: Move with justify                            $ECHO_C"
    at_xfail=no
    (
      echo "17. pic-x.at:166: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(22) JUSTIFIED RIGHT.
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:180: \${COMPILE} -x prog.cob"
echo pic-x.at:180 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:180: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:181: ./prog"
echo pic-x.at:181 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 日本語の文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:181: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  18 ) # 18. pic-x.at:185: Move to alnum EDITED
    at_setup_line='pic-x.at:185'
    at_desc='Move to alnum EDITED'
    $at_quiet $ECHO_N " 18: Move to alnum EDITED                         $ECHO_C"
    at_xfail=no
    (
      echo "18. pic-x.at:185: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC XXXXXX/XXXXXXBXXXXXX0.
       PROCEDURE        DIVISION.
           MOVE "日本中国文字" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:199: \${COMPILE} -x prog.cob"
echo pic-x.at:199 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:199: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:200: ./prog"
echo pic-x.at:200 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本/中国 文字0" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:200: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  19 ) # 19. pic-x.at:204: Move to alnum EDITED (pic too short)
    at_setup_line='pic-x.at:204'
    at_desc='Move to alnum EDITED (pic too short)'
    $at_quiet $ECHO_N " 19: Move to alnum EDITED (pic too short)         $ECHO_C"
    at_xfail=no
    (
      echo "19. pic-x.at:204: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC XXX/XXXBXXX0.
       PROCEDURE        DIVISION.
           MOVE "日本中国文字" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:218: \${COMPILE} -x prog.cob"
echo pic-x.at:218 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Warning: Value size exceeds data size
prog.cob:6: Warning: 'F0' defined here as PIC XXX/XXXBXXX0
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:218: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:222: ./prog"
echo pic-x.at:222 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日/本 中0" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:222: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  20 ) # 20. pic-x.at:226: Move to alnum EDITED (pic too long)
    at_setup_line='pic-x.at:226'
    at_desc='Move to alnum EDITED (pic too long)'
    $at_quiet $ECHO_N " 20: Move to alnum EDITED (pic too long)          $ECHO_C"
    at_xfail=no
    (
      echo "20. pic-x.at:226: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC XXX/XXXBXXX0.
       PROCEDURE        DIVISION.
           MOVE "日本" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:240: \${COMPILE} -x prog.cob"
echo pic-x.at:240 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:240: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:241: ./prog"
echo pic-x.at:241 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日/本    0" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:241: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  21 ) # 21. pic-x.at:245: Move to alnum EDITED (No char break)
    at_setup_line='pic-x.at:245'
    at_desc='Move to alnum EDITED (No char break)'
    $at_quiet $ECHO_N " 21: Move to alnum EDITED (No char break)         $ECHO_C"
    at_xfail=no
    (
      echo "21. pic-x.at:245: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(3)BX(3).
       PROCEDURE        DIVISION.
           MOVE "日本" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:259: \${COMPILE} -x prog.cob"
echo pic-x.at:259 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:259: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:260: ./prog"
echo pic-x.at:260 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日 本" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:260: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  22 ) # 22. pic-x.at:264: Move to alnum EDITED (char break & junk chars)
    at_setup_line='pic-x.at:264'
    at_desc='Move to alnum EDITED (char break & junk chars)'
    $at_quiet $ECHO_N " 22: Move to alnum EDITED (char break & junk chars)$ECHO_C"
    at_xfail=no
    (
      echo "22. pic-x.at:264: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(2)BX(4).
       PROCEDURE        DIVISION.
           MOVE "日本" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:278: \${COMPILE} -x prog.cob"
echo pic-x.at:278 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:278: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:279: ./prog | od -x -An"
echo pic-x.at:279 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 97e6 a520 9ce6 00ac
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:279: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  23 ) # 23. pic-x.at:284: Move group to group in bad alignment
    at_setup_line='pic-x.at:284'
    at_desc='Move group to group in bad alignment'
    $at_quiet $ECHO_N " 23: Move group to group in bad alignment         $ECHO_C"
    at_xfail=no
    (
      echo "23. pic-x.at:284: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0.
       03     XX0    PIC X(6) VALUE "日本".
       01 F1.
       03     XX1    PIC X(4).
       03     FILLER PIC X(2).

       PROCEDURE        DIVISION.
           MOVE   F0 TO F1.
           DISPLAY XX1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:303: \${COMPILE} -x prog.cob"
echo pic-x.at:303 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:303: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:304: ./prog | od -x -An"
echo pic-x.at:304 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 97e6 e6a5
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:304: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  24 ) # 24. pic-x.at:309: Redifinition breaking char pos.
    at_setup_line='pic-x.at:309'
    at_desc='Redifinition breaking char pos.'
    $at_quiet $ECHO_N " 24: Redifinition breaking char pos.              $ECHO_C"
    at_xfail=no
    (
      echo "24. pic-x.at:309: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0.
       03     XX0    PIC X(6) VALUE "日本".
       01 F1 REDEFINES F0.
       03     XX1    PIC X(4).
       03     FILLER PIC X(2).

       PROCEDURE        DIVISION.
           DISPLAY XX1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:327: \${COMPILE} -x prog.cob"
echo pic-x.at:327 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:327: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:328: ./prog | od -x -An"
echo pic-x.at:328 >$at_check_line_file
( $at_traceon; ./prog | od -x -An ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo " 97e6 e6a5
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:328: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  25 ) # 25. pic-x.at:334: Ref mod(n:)
    at_setup_line='pic-x.at:334'
    at_desc='Ref mod(n:)'
    $at_quiet $ECHO_N " 25: Ref mod(n:)                                  $ECHO_C"
    at_xfail=no
    (
      echo "25. pic-x.at:334: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(21).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0(13:) WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:348: \${COMPILE} -x prog.cob"
echo pic-x.at:348 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:348: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:349: ./prog"
echo pic-x.at:349 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:349: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  26 ) # 26. pic-x.at:353: Ref mod(n:m)
    at_setup_line='pic-x.at:353'
    at_desc='Ref mod(n:m)'
    $at_quiet $ECHO_N " 26: Ref mod(n:m)                                 $ECHO_C"
    at_xfail=no
    (
      echo "26. pic-x.at:353: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(21).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0(13:6) WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:367: \${COMPILE} -x prog.cob"
echo pic-x.at:367 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:367: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:368: ./prog"
echo pic-x.at:368 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "文字" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:368: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  27 ) # 27. pic-x.at:372: STRING by size
    at_setup_line='pic-x.at:372'
    at_desc='STRING by size'
    $at_quiet $ECHO_N " 27: STRING by size                               $ECHO_C"
    at_xfail=no
    (
      echo "27. pic-x.at:372: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(6)  VALUE "私の".
       01 F1 PIC X(9)  VALUE "名前は".
       01 F2 PIC X(16) VALUE "ありません".
       01 FF PIC X(30).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY SIZE
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:390: \${COMPILE} -x prog.cob"
echo pic-x.at:390 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:390: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:391: ./prog"
echo pic-x.at:391 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "私の名前はありません" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:391: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  28 ) # 28. pic-x.at:395: STRING with delimiter
    at_setup_line='pic-x.at:395'
    at_desc='STRING with delimiter'
    $at_quiet $ECHO_N " 28: STRING with delimiter                        $ECHO_C"
    at_xfail=no
    (
      echo "28. pic-x.at:395: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(6)  VALUE "私の".
       01 F1 PIC X(12)  VALUE "名前△は".
       01 F2 PIC X(19) VALUE "△ありません".
       01 FF PIC X(12).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY "△"
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:413: \${COMPILE} -x prog.cob"
echo pic-x.at:413 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:413: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:414: ./prog"
echo pic-x.at:414 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "私の名前" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:414: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  29 ) # 29. pic-x.at:418: STRING with pointer
    at_setup_line='pic-x.at:418'
    at_desc='STRING with pointer'
    $at_quiet $ECHO_N " 29: STRING with pointer                          $ECHO_C"
    at_xfail=no
    (
      echo "29. pic-x.at:418: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(6)  VALUE "私の".
       01 F1 PIC X(9)  VALUE "名前は".
       01 F2 PIC X(16) VALUE "ありません".
       01 FF PIC X(30) VALUE "言えません○※△■×".
       01 FP PIC 99    VALUE 16.
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY SIZE
             INTO FF WITH POINTER FP.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:437: \${COMPILE} -x prog.cob"
echo pic-x.at:437 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:437: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:438: ./prog"
echo pic-x.at:438 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "言えません私の名前は" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:438: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  30 ) # 30. pic-x.at:442: INSPECT REPLACING
    at_setup_line='pic-x.at:442'
    at_desc='INSPECT REPLACING'
    $at_quiet $ECHO_N " 30: INSPECT REPLACING                            $ECHO_C"
    at_xfail=no
    (
      echo "30. pic-x.at:442: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(30)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL "５" BY "０".
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:456: \${COMPILE} -x prog.cob"
echo pic-x.at:456 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:456: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:457: ./prog"
echo pic-x.at:457 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "１２３４０１２３４０" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:457: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  31 ) # 31. pic-x.at:461: INSPECT REPLACING by ZERO
    at_setup_line='pic-x.at:461'
    at_desc='INSPECT REPLACING by ZERO'
    $at_quiet $ECHO_N " 31: INSPECT REPLACING by ZERO                    $ECHO_C"
    at_xfail=no
    (
      echo "31. pic-x.at:461: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(30)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL "５" BY ZERO.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:475: \${COMPILE} -x prog.cob"
echo pic-x.at:475 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:475: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:476: ./prog"
echo pic-x.at:476 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "１２３４000１２３４000" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:476: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  32 ) # 32. pic-x.at:480: INSPECT TALLYING
    at_setup_line='pic-x.at:480'
    at_desc='INSPECT TALLYING'
    $at_quiet $ECHO_N " 32: INSPECT TALLYING                             $ECHO_C"
    at_xfail=no
    (
      echo "32. pic-x.at:480: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(30)  VALUE "１２３４５１２３４５".
       01 CN PIC 99.
       PROCEDURE        DIVISION.
           INSPECT F0 TALLYING CN FOR ALL "４５".
           DISPLAY CN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:495: \${COMPILE} -x prog.cob"
echo pic-x.at:495 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:495: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:496: ./prog"
echo pic-x.at:496 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "02" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:496: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  33 ) # 33. pic-x.at:500: INSPECT CONVERTING to SPACE
    at_setup_line='pic-x.at:500'
    at_desc='INSPECT CONVERTING to SPACE'
    $at_quiet $ECHO_N " 33: INSPECT CONVERTING to SPACE                  $ECHO_C"
    at_xfail=no
    (
      echo "33. pic-x.at:500: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(20)  VALUE "ＡＢＣＤＥabcde".
       PROCEDURE        DIVISION.
      ** beta (2bytes) has no correspondint SPACE with equal width  **
           INSPECT F0 CONVERTING "ＡaＢb" TO SPACE.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:515: \${COMPILE} -x prog.cob"
echo pic-x.at:515 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:515: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:516: ./prog"
echo pic-x.at:516 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "　　ＣＤＥ  cde" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:516: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  34 ) # 34. pic-x.at:520: INSPECT CONVERTING 2-bytes-char to SPACE
    at_setup_line='pic-x.at:520'
    at_desc='INSPECT CONVERTING 2-bytes-char to SPACE'
    $at_quiet $ECHO_N " 34: INSPECT CONVERTING 2-bytes-char to SPACE     $ECHO_C"
    at_xfail=no
    (
      echo "34. pic-x.at:520: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(25)  VALUE "ＡＢＣＤＥαβθδε".
       PROCEDURE        DIVISION.
      ** beta (2bytes) has no correspondint SPACE with equal width  **
           INSPECT F0 CONVERTING "ＡβＣ" TO SPACE.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:535: \${COMPILE} -x prog.cob"
echo pic-x.at:535 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:9: Error: Illegal conversion chars.
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "pic-x.at:535: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  35 ) # 35. pic-x.at:541: INSPECT CONVERTING different width chars
    at_setup_line='pic-x.at:541'
    at_desc='INSPECT CONVERTING different width chars'
    $at_quiet $ECHO_N " 35: INSPECT CONVERTING different width chars     $ECHO_C"
    at_xfail=no
    (
      echo "35. pic-x.at:541: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(25)  VALUE "ＡＢＣＤＥαβθδε".
       PROCEDURE        DIVISION.
      ** each char pair differs in width **
           INSPECT F0 CONVERTING "Ａβ" TO "αＢ".
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:556: \${COMPILE} -x prog.cob"
echo pic-x.at:556 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:9: Error: Illegal conversion chars.
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "pic-x.at:556: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  36 ) # 36. pic-x.at:562: INSPECT CONVERTING 2-bytes-char to SPACE (rt)
    at_setup_line='pic-x.at:562'
    at_desc='INSPECT CONVERTING 2-bytes-char to SPACE (rt)'
    $at_quiet $ECHO_N " 36: INSPECT CONVERTING 2-bytes-char to SPACE (rt)$ECHO_C"
    at_xfail=no
    (
      echo "36. pic-x.at:562: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(25)  VALUE "ＡＢＣＤＥαβθδε".
       01 F1 PIC X(8)   VALUE "ＡβＣ".
       PROCEDURE        DIVISION.
           INSPECT F0 CONVERTING F1 TO SPACE.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:577: \${COMPILE} -x prog.cob"
echo pic-x.at:577 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:577: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:578: ./prog"
echo pic-x.at:578 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:9: libcob: 'β' char width (2) mismatch
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "pic-x.at:578: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  37 ) # 37. pic-x.at:584: INSPECT CONVERTING different width chars (rt)
    at_setup_line='pic-x.at:584'
    at_desc='INSPECT CONVERTING different width chars (rt)'
    $at_quiet $ECHO_N " 37: INSPECT CONVERTING different width chars (rt)$ECHO_C"
    at_xfail=no
    (
      echo "37. pic-x.at:584: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC X(25)  VALUE "ＡＢＣＤＥαβθδε".
       01 F1 PIC X(5)   VALUE "Ａβ".
       01 F2 PIC X(5)   VALUE "αＢ".
       PROCEDURE        DIVISION.
      ** each char pair differs in width **
           INSPECT F0 CONVERTING F1 TO F2.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-x.at:601: \${COMPILE} -x prog.cob"
echo pic-x.at:601 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-x.at:601: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-x.at:602: ./prog"
echo pic-x.at:602 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:11: libcob: 'Ａ' char width (3) to 'α' char width (2) mismatch
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "pic-x.at:602: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  38 ) # 38. pic-n.at:1: PIC N Value clause
    at_setup_line='pic-n.at:1'
    at_desc='PIC N Value clause'
    $at_quiet $ECHO_N " 38: PIC N Value clause                           $ECHO_C"
    at_xfail=no
    (
      echo "38. pic-n.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7) VALUE "日本語の文字列".
       PROCEDURE        DIVISION.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:14: \${COMPILE} -x prog.cob"
echo pic-n.at:14 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:15: ./prog"
echo pic-n.at:15 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語の文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  39 ) # 39. pic-n.at:19: PIC N Value 2 bytes char
    at_setup_line='pic-n.at:19'
    at_desc='PIC N Value 2 bytes char'
    $at_quiet $ECHO_N " 39: PIC N Value 2 bytes char                     $ECHO_C"
    at_xfail=no
    (
      echo "39. pic-n.at:19: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2) VALUE "αβγ".
       PROCEDURE        DIVISION.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:32: \${COMPILE} -x prog.cob"
echo pic-n.at:32 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:32: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:33: ./prog"
echo pic-n.at:33 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "αβγ" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  40 ) # 40. pic-n.at:37: PIC N Move
    at_setup_line='pic-n.at:37'
    at_desc='PIC N Move'
    $at_quiet $ECHO_N " 40: PIC N Move                                   $ECHO_C"
    at_xfail=no
    (
      echo "40. pic-n.at:37: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:51: \${COMPILE} -x prog.cob"
echo pic-n.at:51 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:51: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:52: ./prog"
echo pic-n.at:52 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語の文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  41 ) # 41. pic-n.at:56: PIC N Move 2 bytes char.
    at_setup_line='pic-n.at:56'
    at_desc='PIC N Move 2 bytes char.'
    $at_quiet $ECHO_N " 41: PIC N Move 2 bytes char.                     $ECHO_C"
    at_xfail=no
    (
      echo "41. pic-n.at:56: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2).
       PROCEDURE        DIVISION.
           MOVE "αβγ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:70: \${COMPILE} -x prog.cob"
echo pic-n.at:70 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:70: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:71: ./prog"
echo pic-n.at:71 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "αβγ" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:71: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  42 ) # 42. pic-n.at:76: PIC N Move with trunc
    at_setup_line='pic-n.at:76'
    at_desc='PIC N Move with trunc'
    $at_quiet $ECHO_N " 42: PIC N Move with trunc                        $ECHO_C"
    at_xfail=no
    (
      echo "42. pic-n.at:76: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(3).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:90: \${COMPILE} -x prog.cob"
echo pic-n.at:90 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Warning: Value size exceeds data size
prog.cob:6: Warning: 'F0' defined here as PIC N(3)
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:90: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:94: ./prog"
echo pic-n.at:94 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:94: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  43 ) # 43. pic-n.at:98: PIC N Move with padding by full-width SPC
    at_setup_line='pic-n.at:98'
    at_desc='PIC N Move with padding by full-width SPC'
    $at_quiet $ECHO_N " 43: PIC N Move with padding by full-width SPC    $ECHO_C"
    at_xfail=no
    (
      echo "43. pic-n.at:98: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(9).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:112: \${COMPILE} -x prog.cob"
echo pic-n.at:112 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:112: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:113: ./prog"
echo pic-n.at:113 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本語の文字列      " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:113: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  44 ) # 44. pic-n.at:117: PIC N Move 2 bytes char with padding
    at_setup_line='pic-n.at:117'
    at_desc='PIC N Move 2 bytes char with padding'
    $at_quiet $ECHO_N " 44: PIC N Move 2 bytes char with padding         $ECHO_C"
    at_xfail=no
    (
      echo "44. pic-n.at:117: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2).
       PROCEDURE        DIVISION.
           MOVE "α" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:131: \${COMPILE} -x prog.cob"
echo pic-n.at:131 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:131: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:132: ./prog"
echo pic-n.at:132 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "α    " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:132: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  45 ) # 45. pic-n.at:137: PIC N Move with justify
    at_setup_line='pic-n.at:137'
    at_desc='PIC N Move with justify'
    $at_quiet $ECHO_N " 45: PIC N Move with justify                      $ECHO_C"
    at_xfail=no
    (
      echo "45. pic-n.at:137: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(9) JUSTIFIED RIGHT.
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:151: \${COMPILE} -x prog.cob"
echo pic-n.at:151 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:151: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:152: ./prog"
echo pic-n.at:152 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "      日本語の文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:152: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  46 ) # 46. pic-n.at:156: PIC N Move 2 bytes char with justify
    at_setup_line='pic-n.at:156'
    at_desc='PIC N Move 2 bytes char with justify'
    $at_quiet $ECHO_N " 46: PIC N Move 2 bytes char with justify         $ECHO_C"
    at_xfail=no
    (
      echo "46. pic-n.at:156: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2) JUSTIFIED RIGHT.
       PROCEDURE        DIVISION.
           MOVE "α" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:170: \${COMPILE} -x prog.cob"
echo pic-n.at:170 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:170: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:171: ./prog"
echo pic-n.at:171 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "    α" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:171: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  47 ) # 47. pic-n.at:175: PIC N Move to NATIONAL EDITED
    at_setup_line='pic-n.at:175'
    at_desc='PIC N Move to NATIONAL EDITED'
    $at_quiet $ECHO_N " 47: PIC N Move to NATIONAL EDITED                $ECHO_C"
    at_xfail=no
    (
      echo "47. pic-n.at:175: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC NN/NNBNN0.
       PROCEDURE        DIVISION.
           MOVE "日本中国文字" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:189: \${COMPILE} -x prog.cob"
echo pic-n.at:189 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:189: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:190: ./prog"
echo pic-n.at:190 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "日本／中国　文字０" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:190: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  48 ) # 48. pic-n.at:194: PIC N Move with half-width alnum conv.
    at_setup_line='pic-n.at:194'
    at_desc='PIC N Move with half-width alnum conv.'
    $at_quiet $ECHO_N " 48: PIC N Move with half-width alnum conv.       $ECHO_C"
    at_xfail=no
    (
      echo "48. pic-n.at:194: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ABC0123" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:208: \${COMPILE} -x prog.cob"
echo pic-n.at:208 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:208: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:209: ./prog"
echo pic-n.at:209 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ＡＢＣ０１２３" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:209: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  49 ) # 49. pic-n.at:213: PIC N Move with half-width kana conv.
    at_setup_line='pic-n.at:213'
    at_desc='PIC N Move with half-width kana conv.'
    $at_quiet $ECHO_N " 49: PIC N Move with half-width kana conv.        $ECHO_C"
    at_xfail=no
    (
      echo "49. pic-n.at:213: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ｺﾒﾀﾞｺｰﾋｰ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:227: \${COMPILE} -x prog.cob"
echo pic-n.at:227 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:227: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:228: ./prog"
echo pic-n.at:228 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "コメダコーヒー" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:228: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  50 ) # 50. pic-n.at:232: PIC N Ref mod(n:)
    at_setup_line='pic-n.at:232'
    at_desc='PIC N Ref mod(n:)'
    $at_quiet $ECHO_N " 50: PIC N Ref mod(n:)                            $ECHO_C"
    at_xfail=no
    (
      echo "50. pic-n.at:232: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0(13:) WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:246: \${COMPILE} -x prog.cob"
echo pic-n.at:246 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:246: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:247: ./prog"
echo pic-n.at:247 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "文字列" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:247: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  51 ) # 51. pic-n.at:251: PIC N Ref mod(n:m)
    at_setup_line='pic-n.at:251'
    at_desc='PIC N Ref mod(n:m)'
    $at_quiet $ECHO_N " 51: PIC N Ref mod(n:m)                           $ECHO_C"
    at_xfail=no
    (
      echo "51. pic-n.at:251: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0(13:6) WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:265: \${COMPILE} -x prog.cob"
echo pic-n.at:265 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:265: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:266: ./prog"
echo pic-n.at:266 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "文字" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:266: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  52 ) # 52. pic-n.at:270: PIC N STRING by size
    at_setup_line='pic-n.at:270'
    at_desc='PIC N STRING by size'
    $at_quiet $ECHO_N " 52: PIC N STRING by size                         $ECHO_C"
    at_xfail=no
    (
      echo "52. pic-n.at:270: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(3)  VALUE "名前は".
       01 F2 PIC N(5) VALUE "ありません".
       01 FF PIC N(10).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY SIZE
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:288: \${COMPILE} -x prog.cob"
echo pic-n.at:288 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:288: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:289: ./prog"
echo pic-n.at:289 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "私の名前はありません" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:289: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  53 ) # 53. pic-n.at:293: PIC N STRING with delimiter (causes warn)
    at_setup_line='pic-n.at:293'
    at_desc='PIC N STRING with delimiter (causes warn)'
    $at_quiet $ECHO_N " 53: PIC N STRING with delimiter (causes warn)    $ECHO_C"
    at_xfail=no
    (
      echo "53. pic-n.at:293: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(4)  VALUE "名前△は".
       01 F2 PIC N(6) VALUE "△ありません".
       01 FF PIC N(4).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY "△"
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:311: \${COMPILE} -x prog.cob"
echo pic-n.at:311 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:311: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:312: ./prog"
echo pic-n.at:312 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "私の名前" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:312: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  54 ) # 54. pic-n.at:316: PIC N STRING with NATIONAL delimiter
    at_setup_line='pic-n.at:316'
    at_desc='PIC N STRING with NATIONAL delimiter'
    $at_quiet $ECHO_N " 54: PIC N STRING with NATIONAL delimiter         $ECHO_C"
    at_xfail=no
    (
      echo "54. pic-n.at:316: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(4)  VALUE "名前△は".
       01 F2 PIC N(6) VALUE "△ありません".
       01 FF PIC N(4).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY N"△"
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:334: \${COMPILE} -x prog.cob"
echo pic-n.at:334 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:334: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:335: ./prog"
echo pic-n.at:335 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "私の名前" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:335: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  55 ) # 55. pic-n.at:339: PIC N STRING with pointer
    at_setup_line='pic-n.at:339'
    at_desc='PIC N STRING with pointer'
    $at_quiet $ECHO_N " 55: PIC N STRING with pointer                    $ECHO_C"
    at_xfail=no
    (
      echo "55. pic-n.at:339: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(3)  VALUE "名前は".
       01 F2 PIC N(5)  VALUE "ありません".
       01 FF PIC N(10) VALUE "言えません◎○△■※".
       01 FP PIC 99    VALUE 16.
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY SIZE
             INTO FF WITH POINTER FP.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:358: \${COMPILE} -x prog.cob"
echo pic-n.at:358 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:358: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:359: ./prog"
echo pic-n.at:359 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "言えません私の名前は" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:359: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  56 ) # 56. pic-n.at:363: PIC N INSPECT REPLACING
    at_setup_line='pic-n.at:363'
    at_desc='PIC N INSPECT REPLACING'
    $at_quiet $ECHO_N " 56: PIC N INSPECT REPLACING                      $ECHO_C"
    at_xfail=no
    (
      echo "56. pic-n.at:363: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL "５" BY "０".
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:377: \${COMPILE} -x prog.cob"
echo pic-n.at:377 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:377: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:378: ./prog"
echo pic-n.at:378 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "１２３４０１２３４０" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:378: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  57 ) # 57. pic-n.at:382: PIC N INSPECT REPLACING by ZERO
    at_setup_line='pic-n.at:382'
    at_desc='PIC N INSPECT REPLACING by ZERO'
    $at_quiet $ECHO_N " 57: PIC N INSPECT REPLACING by ZERO              $ECHO_C"
    at_xfail=no
    (
      echo "57. pic-n.at:382: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL "５" BY ZERO.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:396: \${COMPILE} -x prog.cob"
echo pic-n.at:396 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:396: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:397: ./prog"
echo pic-n.at:397 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "１２３４000１２３４000" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:397: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  58 ) # 58. pic-n.at:401: PIC N INSPECT REPLACING by NATIONAL ZERO
    at_setup_line='pic-n.at:401'
    at_desc='PIC N INSPECT REPLACING by NATIONAL ZERO'
    $at_quiet $ECHO_N " 58: PIC N INSPECT REPLACING by NATIONAL ZERO     $ECHO_C"
    at_xfail=no
    (
      echo "58. pic-n.at:401: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL N"５" BY ZERO.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:415: \${COMPILE} -x prog.cob"
echo pic-n.at:415 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:415: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:416: ./prog"
echo pic-n.at:416 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "１２３４０１２３４０" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:416: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  59 ) # 59. pic-n.at:420: PIC N INSPECT TALLYING
    at_setup_line='pic-n.at:420'
    at_desc='PIC N INSPECT TALLYING'
    $at_quiet $ECHO_N " 59: PIC N INSPECT TALLYING                       $ECHO_C"
    at_xfail=no
    (
      echo "59. pic-n.at:420: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       01 CN PIC 99.
       PROCEDURE        DIVISION.
           INSPECT F0 TALLYING CN FOR ALL "４５".
           DISPLAY CN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:435: \${COMPILE} -x prog.cob"
echo pic-n.at:435 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:435: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:436: ./prog"
echo pic-n.at:436 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "02" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:436: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  60 ) # 60. pic-n.at:440: PIC N Move with half-width dakuten kana.
    at_setup_line='pic-n.at:440'
    at_desc='PIC N Move with half-width dakuten kana.'
    $at_quiet $ECHO_N " 60: PIC N Move with half-width dakuten kana.     $ECHO_C"
    at_xfail=no
    (
      echo "60. pic-n.at:440: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ﾞﾀﾞ･ｳﾞｨﾝﾁ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:454: \${COMPILE} -x prog.cob"
echo pic-n.at:454 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:454: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:455: ./prog"
echo pic-n.at:455 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "゛ダ・ヴィンチ" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:455: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  61 ) # 61. pic-n.at:459: PIC N Move with half-width han-dakuten kana.
    at_setup_line='pic-n.at:459'
    at_desc='PIC N Move with half-width han-dakuten kana.'
    $at_quiet $ECHO_N " 61: PIC N Move with half-width han-dakuten kana. $ECHO_C"
    at_xfail=no
    (
      echo "61. pic-n.at:459: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ﾟﾎﾟﾝﾃﾞﾘﾝｸﾞ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-n.at:473: \${COMPILE} -x prog.cob"
echo pic-n.at:473 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:473: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-n.at:474: ./prog"
echo pic-n.at:474 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "゜ポンデリング" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-n.at:474: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  62 ) # 62. pic-bn.at:1: PIC BN Value clause
    at_setup_line='pic-bn.at:1'
    at_desc='PIC BN Value clause'
    $at_quiet $ECHO_N " 62: PIC BN Value clause                          $ECHO_C"
    at_xfail=no
    (
      echo "62. pic-bn.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC BN(3) VALUE "日本語".
       PROCEDURE        DIVISION.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-bn.at:14: \${COMPILE} -x prog.cob"
echo pic-bn.at:14 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-bn.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-bn.at:15: ./prog"
echo pic-bn.at:15 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "　日本語" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-bn.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  63 ) # 63. pic-bn.at:19: PIC BN Move
    at_setup_line='pic-bn.at:19'
    at_desc='PIC BN Move'
    $at_quiet $ECHO_N " 63: PIC BN Move                                  $ECHO_C"
    at_xfail=no
    (
      echo "63. pic-bn.at:19: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC BN(3).
       PROCEDURE        DIVISION.
           MOVE "日本語" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-bn.at:33: \${COMPILE} -x prog.cob"
echo pic-bn.at:33 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-bn.at:33: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-bn.at:34: ./prog"
echo pic-bn.at:34 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "　日本語" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-bn.at:34: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  64 ) # 64. pic-bn.at:38: PIC BN Refmod char by char
    at_setup_line='pic-bn.at:38'
    at_desc='PIC BN Refmod char by char'
    $at_quiet $ECHO_N " 64: PIC BN Refmod char by char                   $ECHO_C"
    at_xfail=no
    (
      echo "64. pic-bn.at:38: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC BN(3) VALUE "日本語".
       PROCEDURE        DIVISION.
           DISPLAY F0(1:3) WITH NO ADVANCING.
           DISPLAY F0(4:3) WITH NO ADVANCING.
           DISPLAY F0(7:3) WITH NO ADVANCING.
           DISPLAY F0(10:3) WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "pic-bn.at:54: \${COMPILE} -x prog.cob"
echo pic-bn.at:54 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-bn.at:54: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "pic-bn.at:55: ./prog"
echo pic-bn.at:55 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "　日本語" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "pic-bn.at:55: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  65 ) # 65. program-id.at:1: PROGRAM-ID NATIONAL C89 no warning
    at_setup_line='program-id.at:1'
    at_desc='PROGRAM-ID NATIONAL C89 no warning'
    $at_quiet $ECHO_N " 65: PROGRAM-ID NATIONAL C89 no warning           $ECHO_C"
    at_xfail=no
    (
      echo "65. program-id.at:1: testing ..."
      $at_traceon


cat >test.conf <<'_ATEOF'

include "default.conf"
c89-identifier-length-check: yes
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      東京都.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           END PROGRAM 東京都.
_ATEOF


$at_traceoff
echo "program-id.at:16: \${COMPILE} -conf=test.conf -x prog.cob"
echo program-id.at:16 >$at_check_line_file
( $at_traceon; ${COMPILE} -conf=test.conf -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "program-id.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  66 ) # 66. program-id.at:20: PROGRAM-ID NATIONAL C89 warning
    at_setup_line='program-id.at:20'
    at_desc='PROGRAM-ID NATIONAL C89 warning'
    $at_quiet $ECHO_N " 66: PROGRAM-ID NATIONAL C89 warning              $ECHO_C"
    at_xfail=no
    (
      echo "66. program-id.at:20: testing ..."
      $at_traceon


cat >test.conf <<'_ATEOF'

include "default.conf"
c89-identifier-length-check: yes
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      東京湾岸港湾局.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           END PROGRAM 東京湾岸港湾局.
_ATEOF


$at_traceoff
echo "program-id.at:35: \${COMPILE} -conf=test.conf -x prog.cob"
echo program-id.at:35 >$at_check_line_file
( $at_traceon; ${COMPILE} -conf=test.conf -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:3: Warning: PROGRAM-ID length exceeds C89 function name limit
prog.cob:6: Warning: PROGRAM-ID length exceeds C89 function name limit
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "program-id.at:35: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  67 ) # 67. program-id.at:42: PROGRAM-ID NATIONAL C89 ignore
    at_setup_line='program-id.at:42'
    at_desc='PROGRAM-ID NATIONAL C89 ignore'
    $at_quiet $ECHO_N " 67: PROGRAM-ID NATIONAL C89 ignore               $ECHO_C"
    at_xfail=no
    (
      echo "67. program-id.at:42: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      東京湾岸港湾局.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           END PROGRAM 東京湾岸港湾局.
_ATEOF


$at_traceoff
echo "program-id.at:52: \${COMPILE} -x prog.cob"
echo program-id.at:52 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "program-id.at:52: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  68 ) # 68. program-id.at:56: PROGRAM-ID NATIONAL 32 character no over
    at_setup_line='program-id.at:56'
    at_desc='PROGRAM-ID NATIONAL 32 character no over'
    $at_quiet $ECHO_N " 68: PROGRAM-ID NATIONAL 32 character no over     $ECHO_C"
    at_xfail=no
    (
      echo "68. program-id.at:56: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      あいうえおかきくけこさしすせそ
      -たちつてとなにぬねのはひふへほ.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "program-id.at:67: \${COMPILE} -x prog.cob"
echo program-id.at:67 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "program-id.at:67: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  69 ) # 69. program-id.at:71: PROGRAM-ID NATIONAL 32 character over
    at_setup_line='program-id.at:71'
    at_desc='PROGRAM-ID NATIONAL 32 character over'
    $at_quiet $ECHO_N " 69: PROGRAM-ID NATIONAL 32 character over        $ECHO_C"
    at_xfail=no
    (
      echo "69. program-id.at:71: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      あいうえおかきくけこさしすせそ
      -たちつてとなにぬねのはひふへほまみ.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "program-id.at:82: \${COMPILE} -x prog.cob"
echo program-id.at:82 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:3: Error: User defined name must be less than 32 characters
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "program-id.at:82: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  70 ) # 70. error-print.at:1: undefined not message
    at_setup_line='error-print.at:1'
    at_desc='undefined not message'
    $at_quiet $ECHO_N " 70: undefined not message                        $ECHO_C"
    at_xfail=no
    (
      echo "70. error-print.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       identification division.
       program-id. prog.
       data division.
       working-storage section.
       01 wk-01.
         03 wk-02  pic x(4).
         03 ｗｋ－０３  redefines wk-02 pic n(2).
       01 cnt  pic 9(1).
       procedure division.
          inspect ｗｋ－０３ tallying cnt
            for characters before initial space.
          stop run.
_ATEOF


$at_traceoff
echo "error-print.at:18: \${COMPILE} -x prog.cob"
echo error-print.at:18 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:8: Error: Size of 'ｗｋ－０３' larger than size of 'wk-02'
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "error-print.at:18: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  71 ) # 71. error-print.at:24: Encoding alphanumeric name item
    at_setup_line='error-print.at:24'
    at_desc='Encoding alphanumeric name item'
    $at_quiet $ECHO_N " 71: Encoding alphanumeric name item              $ECHO_C"
    at_xfail=no
    (
      echo "71. error-print.at:24: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           DISPLAY A___E38182___A.
           STOP RUN.
_ATEOF


$at_traceoff
echo "error-print.at:35: \${COMPILE} -x prog.cob"
echo error-print.at:35 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: 'A___E38182___A' undefined
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "error-print.at:35: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  72 ) # 72. error-print.at:41: Encoding national name item
    at_setup_line='error-print.at:41'
    at_desc='Encoding national name item'
    $at_quiet $ECHO_N " 72: Encoding national name item                  $ECHO_C"
    at_xfail=no
    (
      echo "72. error-print.at:41: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       PROCEDURE DIVISION.
           DISPLAY A___あ___A.
           STOP RUN.
_ATEOF


$at_traceoff
echo "error-print.at:52: \${COMPILE} -x prog.cob"
echo error-print.at:52 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: 'A___あ___A' undefined
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "error-print.at:52: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  73 ) # 73. stored-char-length.at:1: FUNCTION STORED-CHAR-LENGTH(PIC X)
    at_setup_line='stored-char-length.at:1'
    at_desc='FUNCTION STORED-CHAR-LENGTH(PIC X)'
    $at_quiet $ECHO_N " 73: FUNCTION STORED-CHAR-LENGTH(PIC X)           $ECHO_C"
    at_xfail=no
    (
      echo "73. stored-char-length.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 NSTR         PIC X(30) USAGE DISPLAY.
       77 NLEN         PIC 9(2)  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE ".プリウスα" TO NSTR.
           MOVE FUNCTION STORED-CHAR-LENGTH(NSTR) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:17: \${COMPILE} -x prog.cob"
echo stored-char-length.at:17 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:17: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:18: ./prog"
echo stored-char-length.at:18 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "06" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  74 ) # 74. stored-char-length.at:22: FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPC
    at_setup_line='stored-char-length.at:22'
    at_desc='FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPC'
    $at_quiet $ECHO_N " 74: FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPC    $ECHO_C"
    at_xfail=no
    (
      echo "74. stored-char-length.at:22: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 NSTR         PIC X(30) USAGE DISPLAY.
       77 NLEN         PIC 9(2)  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE ".プリウスα " TO NSTR.
           MOVE FUNCTION STORED-CHAR-LENGTH(NSTR) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:38: \${COMPILE} -x prog.cob"
echo stored-char-length.at:38 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:39: ./prog"
echo stored-char-length.at:39 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "06" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  75 ) # 75. stored-char-length.at:43: FUNCTION STORED-CHAR-LENGTH(PIC X) /w wSPC
    at_setup_line='stored-char-length.at:43'
    at_desc='FUNCTION STORED-CHAR-LENGTH(PIC X) /w wSPC'
    $at_quiet $ECHO_N " 75: FUNCTION STORED-CHAR-LENGTH(PIC X) /w wSPC   $ECHO_C"
    at_xfail=no
    (
      echo "75. stored-char-length.at:43: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 NSTR         PIC X(30) USAGE DISPLAY.
       77 NLEN         PIC 9(2)  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE ".プリウスα　" TO NSTR.
           MOVE FUNCTION STORED-CHAR-LENGTH(NSTR) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:59: \${COMPILE} -x prog.cob"
echo stored-char-length.at:59 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:60: ./prog"
echo stored-char-length.at:60 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "06" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:60: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  76 ) # 76. stored-char-length.at:64: FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPCs
    at_setup_line='stored-char-length.at:64'
    at_desc='FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPCs'
    $at_quiet $ECHO_N " 76: FUNCTION STORED-CHAR-LENGTH(PIC X) /w SPCs   $ECHO_C"
    at_xfail=no
    (
      echo "76. stored-char-length.at:64: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 NSTR         PIC X(30) USAGE DISPLAY.
       77 NLEN         PIC 9(2)  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE ".プリウスα　 " TO NSTR.
           MOVE FUNCTION STORED-CHAR-LENGTH(NSTR) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:80: \${COMPILE} -x prog.cob"
echo stored-char-length.at:80 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:80: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:81: ./prog"
echo stored-char-length.at:81 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "06" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  77 ) # 77. stored-char-length.at:85: FUNCTION STORED-CHAR-LENGTH(PIC N)
    at_setup_line='stored-char-length.at:85'
    at_desc='FUNCTION STORED-CHAR-LENGTH(PIC N)'
    $at_quiet $ECHO_N " 77: FUNCTION STORED-CHAR-LENGTH(PIC N)           $ECHO_C"
    at_xfail=no
    (
      echo "77. stored-char-length.at:85: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 NSTR         PIC N(10) USAGE DISPLAY.
       77 NLEN         PIC 9(2)  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE ".プリウスα" TO NSTR.
           MOVE FUNCTION STORED-CHAR-LENGTH(NSTR) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:101: \${COMPILE} -x prog.cob"
echo stored-char-length.at:101 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:102: ./prog"
echo stored-char-length.at:102 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "06" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:102: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  78 ) # 78. stored-char-length.at:106: FUNCTION STORED-CHAR-LENGTH(SINGLE-BYTE SPACE)
    at_setup_line='stored-char-length.at:106'
    at_desc='FUNCTION STORED-CHAR-LENGTH(SINGLE-BYTE SPACE)'
    $at_quiet $ECHO_N " 78: FUNCTION STORED-CHAR-LENGTH(SINGLE-BYTE SPACE)$ECHO_C"
    at_xfail=no
    (
      echo "78. stored-char-length.at:106: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  Y   PIC   X(24).
       PROCEDURE        DIVISION.
           MOVE "1234567   12" TO Y.
           DISPLAY FUNCTION STORED-CHAR-LENGTH ( Y )
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:121: \${COMPILE} -o prog prog.cob"
echo stored-char-length.at:121 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:121: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:122: ./prog"
echo stored-char-length.at:122 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00000012
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:122: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  79 ) # 79. stored-char-length.at:127: FUNCTION STORED-CHAR-LENGTH(DOUBLE-BYTE SPACE)
    at_setup_line='stored-char-length.at:127'
    at_desc='FUNCTION STORED-CHAR-LENGTH(DOUBLE-BYTE SPACE)'
    $at_quiet $ECHO_N " 79: FUNCTION STORED-CHAR-LENGTH(DOUBLE-BYTE SPACE)$ECHO_C"
    at_xfail=no
    (
      echo "79. stored-char-length.at:127: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  Y   PIC   X(24).
       PROCEDURE        DIVISION.
           MOVE "１２　４" TO Y.
           DISPLAY FUNCTION STORED-CHAR-LENGTH ( Y )
           END-DISPLAY.
           STOP RUN.
_ATEOF


$at_traceoff
echo "stored-char-length.at:142: \${COMPILE} -o prog prog.cob"
echo stored-char-length.at:142 >$at_check_line_file
( $at_traceon; ${COMPILE} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:142: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "stored-char-length.at:143: ./prog"
echo stored-char-length.at:143 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "00000004
" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "stored-char-length.at:143: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  80 ) # 80. warn-mixture-byte.at:1: STRING Alphanumeric to National
    at_setup_line='warn-mixture-byte.at:1'
    at_desc='STRING Alphanumeric to National'
    $at_quiet $ECHO_N " 80: STRING Alphanumeric to National              $ECHO_C"
    at_xfail=no
    (
      echo "80. warn-mixture-byte.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION  DIVISION.
       PROGRAM-ID.     prog.
       DATA            DIVISION.
       WORKING-STORAGE SECTION.
       01 X       PIC X(6) value "procob".
       01 Y       PIC N(6).
       PROCEDURE       DIVISION.
           STRING X DELIMITED BY SIZE INTO Y.
           DISPLAY Y NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "warn-mixture-byte.at:16: \${COMPILE} -x prog.cob"
echo warn-mixture-byte.at:16 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "warn-mixture-byte.at:16: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "warn-mixture-byte.at:17: ./prog"
echo warn-mixture-byte.at:17 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "procob            " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "warn-mixture-byte.at:17: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  81 ) # 81. warn-mixture-byte.at:21: STRING National to Alphanumeric
    at_setup_line='warn-mixture-byte.at:21'
    at_desc='STRING National to Alphanumeric'
    $at_quiet $ECHO_N " 81: STRING National to Alphanumeric              $ECHO_C"
    at_xfail=no
    (
      echo "81. warn-mixture-byte.at:21: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION  DIVISION.
       PROGRAM-ID.     prog.
       DATA            DIVISION.
       WORKING-STORAGE SECTION.
       01 X       PIC N(6) VALUE "ｐｒｏｃｏｂ".
       01 Y       PIC X(18).
       PROCEDURE DIVISION.
           STRING X DELIMITED BY SIZE INTO Y.
           DISPLAY Y NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "warn-mixture-byte.at:36: \${COMPILE} -x prog.cob"
echo warn-mixture-byte.at:36 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "warn-mixture-byte.at:36: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "warn-mixture-byte.at:37: ./prog"
echo warn-mixture-byte.at:37 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ｐｒｏｃｏｂ" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "warn-mixture-byte.at:37: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  82 ) # 82. limits.at:1: Field length limit PIC A/VALID
    at_setup_line='limits.at:1'
    at_desc='Field length limit PIC A/VALID'
    $at_quiet $ECHO_N " 82: Field length limit PIC A/VALID               $ECHO_C"
    at_xfail=no
    (
      echo "82. limits.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC A(16777216).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:13: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:13 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:13: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  83 ) # 83. limits.at:17: Field length limit PIC A/TOO LONG
    at_setup_line='limits.at:17'
    at_desc='Field length limit PIC A/TOO LONG'
    $at_quiet $ECHO_N " 83: Field length limit PIC A/TOO LONG            $ECHO_C"
    at_xfail=no
    (
      echo "83. limits.at:17: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC A(16777217).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:29: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:29 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: Alphabetic field cannot be larger than 16777216 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:29: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  84 ) # 84. limits.at:35: Field length limit PIC X/VALID
    at_setup_line='limits.at:35'
    at_desc='Field length limit PIC X/VALID'
    $at_quiet $ECHO_N " 84: Field length limit PIC X/VALID               $ECHO_C"
    at_xfail=no
    (
      echo "84. limits.at:35: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC X(16777216).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:47: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:47 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:47: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  85 ) # 85. limits.at:51: Field length limit PIC X/TOO LONG
    at_setup_line='limits.at:51'
    at_desc='Field length limit PIC X/TOO LONG'
    $at_quiet $ECHO_N " 85: Field length limit PIC X/TOO LONG            $ECHO_C"
    at_xfail=no
    (
      echo "85. limits.at:51: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC X(16777217).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:63: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:63 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: AlphaNumeric field cannot be larger than 16777216 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:63: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  86 ) # 86. limits.at:69: Field length limit PIC B9/VALID
    at_setup_line='limits.at:69'
    at_desc='Field length limit PIC B9/VALID'
    $at_quiet $ECHO_N " 86: Field length limit PIC B9/VALID              $ECHO_C"
    at_xfail=no
    (
      echo "86. limits.at:69: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC B9(159).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:81: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:81 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  87 ) # 87. limits.at:85: Field length limit PIC B9/TOO LONG
    at_setup_line='limits.at:85'
    at_desc='Field length limit PIC B9/TOO LONG'
    $at_quiet $ECHO_N " 87: Field length limit PIC B9/TOO LONG           $ECHO_C"
    at_xfail=no
    (
      echo "87. limits.at:85: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC B9(160).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:97: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:97 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: NumericEdit field cannot be larger than 160 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:97: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  88 ) # 88. limits.at:103: Field length limit PIC B/VALID
    at_setup_line='limits.at:103'
    at_desc='Field length limit PIC B/VALID'
    $at_quiet $ECHO_N " 88: Field length limit PIC B/VALID               $ECHO_C"
    at_xfail=no
    (
      echo "88. limits.at:103: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC B(16777216).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:115: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:115 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:115: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  89 ) # 89. limits.at:119: Field length limit PIC B/TOO LONG
    at_setup_line='limits.at:119'
    at_desc='Field length limit PIC B/TOO LONG'
    $at_quiet $ECHO_N " 89: Field length limit PIC B/TOO LONG            $ECHO_C"
    at_xfail=no
    (
      echo "89. limits.at:119: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC B(16777217).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:131: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:131 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: AlphaNumericEdit field cannot be larger than 16777216 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:131: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  90 ) # 90. limits.at:137: Field length limit PIC BA/VALID
    at_setup_line='limits.at:137'
    at_desc='Field length limit PIC BA/VALID'
    $at_quiet $ECHO_N " 90: Field length limit PIC BA/VALID              $ECHO_C"
    at_xfail=no
    (
      echo "90. limits.at:137: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC BA(16777215).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:149: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:149 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:149: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  91 ) # 91. limits.at:153: Field length limit PIC BA/TOO LONG
    at_setup_line='limits.at:153'
    at_desc='Field length limit PIC BA/TOO LONG'
    $at_quiet $ECHO_N " 91: Field length limit PIC BA/TOO LONG           $ECHO_C"
    at_xfail=no
    (
      echo "91. limits.at:153: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC BA(16777216).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:165: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:165 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: AlphaNumericEdit field cannot be larger than 16777216 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:165: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  92 ) # 92. limits.at:171: Field length limit PIC BX/VALID
    at_setup_line='limits.at:171'
    at_desc='Field length limit PIC BX/VALID'
    $at_quiet $ECHO_N " 92: Field length limit PIC BX/VALID              $ECHO_C"
    at_xfail=no
    (
      echo "92. limits.at:171: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC BX(16777215).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:183: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:183 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:183: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  93 ) # 93. limits.at:187: Field length limit PIC BX/TOO LONG
    at_setup_line='limits.at:187'
    at_desc='Field length limit PIC BX/TOO LONG'
    $at_quiet $ECHO_N " 93: Field length limit PIC BX/TOO LONG           $ECHO_C"
    at_xfail=no
    (
      echo "93. limits.at:187: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-X       PIC BX(16777216).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:199: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:199 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: AlphaNumericEdit field cannot be larger than 16777216 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:199: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  94 ) # 94. limits.at:205: Field length limit PIC N/VALID (UTF-8)
    at_setup_line='limits.at:205'
    at_desc='Field length limit PIC N/VALID (UTF-8)'
    $at_quiet $ECHO_N " 94: Field length limit PIC N/VALID (UTF-8)       $ECHO_C"
    at_xfail=no
    (
      echo "94. limits.at:205: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-N       PIC N(5592405).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:217: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:217 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:217: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  95 ) # 95. limits.at:221: Field length limit PIC N/TOO LONG (UTF-8)
    at_setup_line='limits.at:221'
    at_desc='Field length limit PIC N/TOO LONG (UTF-8)'
    $at_quiet $ECHO_N " 95: Field length limit PIC N/TOO LONG (UTF-8)    $ECHO_C"
    at_xfail=no
    (
      echo "95. limits.at:221: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 INVALID-N     PIC N(5592406).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:233: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:233 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: National field cannot be larger than 5592405 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:233: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  96 ) # 96. limits.at:239: Field length limit PIC BN/VALID (UTF-8)
    at_setup_line='limits.at:239'
    at_desc='Field length limit PIC BN/VALID (UTF-8)'
    $at_quiet $ECHO_N " 96: Field length limit PIC BN/VALID (UTF-8)      $ECHO_C"
    at_xfail=no
    (
      echo "96. limits.at:239: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 VALID-BN      PIC BN(5592404).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:251: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:251 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "limits.at:251: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  97 ) # 97. limits.at:255: Field length limit PIC BN/TOO LONG (UTF-8)
    at_setup_line='limits.at:255'
    at_desc='Field length limit PIC BN/TOO LONG (UTF-8)'
    $at_quiet $ECHO_N " 97: Field length limit PIC BN/TOO LONG (UTF-8)   $ECHO_C"
    at_xfail=no
    (
      echo "97. limits.at:255: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 INVALID-BN    PIC BN(5592405).
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


$at_traceoff
echo "limits.at:267: \${COMPILE_LIMIT_TEST} -o prog prog.cob"
echo limits.at:267 >$at_check_line_file
( $at_traceon; ${COMPILE_LIMIT_TEST} -o prog prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
echo >>$at_stderr; echo "prog.cob:6: Error: NationalEdit field cannot be larger than 5592405 digits
" | $at_diff - $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   1) ;;
   *) echo "limits.at:267: exit code was $at_status, expected 1"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  98 ) # 98. national.at:1: FUNCTION NATIONAL single-byte
    at_setup_line='national.at:1'
    at_desc='FUNCTION NATIONAL single-byte'
    $at_quiet $ECHO_N " 98: FUNCTION NATIONAL single-byte                $ECHO_C"
    at_xfail=no
    (
      echo "98. national.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(5).
       01 O-STR    PIC X(15).
       PROCEDURE        DIVISION.
           MOVE "ABCDZ" TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:17: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:17 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:17: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:18: ./prog"
echo national.at:18 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ＡＢＣＤＺ" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:18: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  99 ) # 99. national.at:22: FUNCTION NATIONAL multi-byte
    at_setup_line='national.at:22'
    at_desc='FUNCTION NATIONAL multi-byte'
    $at_quiet $ECHO_N " 99: FUNCTION NATIONAL multi-byte                 $ECHO_C"
    at_xfail=no
    (
      echo "99. national.at:22: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(12).
       01 O-STR    PIC X(18).
       PROCEDURE        DIVISION.
           MOVE "AＢC１2３" TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:38: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:38 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:39: ./prog"
echo national.at:39 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ＡＢＣ１２３" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  100 ) # 100. national.at:43: FUNCTION NATIONAL KIGOU-exclamation
    at_setup_line='national.at:43'
    at_desc='FUNCTION NATIONAL KIGOU-exclamation'
    $at_quiet $ECHO_N "100: FUNCTION NATIONAL KIGOU-exclamation          $ECHO_C"
    at_xfail=no
    (
      echo "100. national.at:43: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(5).
       01 O-STR    PIC X(15).
       PROCEDURE        DIVISION.
           MOVE "!!!!!" TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:59: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:59 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:59: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:60: ./prog"
echo national.at:60 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "！！！！！" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:60: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  101 ) # 101. national.at:64: FUNCTION NATIONAL KIGOU-yen
    at_setup_line='national.at:64'
    at_desc='FUNCTION NATIONAL KIGOU-yen'
    $at_quiet $ECHO_N "101: FUNCTION NATIONAL KIGOU-yen                  $ECHO_C"
    at_xfail=no
    (
      echo "101. national.at:64: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(1).
       01 O-STR    PIC X(15).
       PROCEDURE        DIVISION.
           MOVE "\" TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:80: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:80 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:80: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:81: ./prog"
echo national.at:81 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "￥            " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:81: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  102 ) # 102. national.at:85: FUNCTION NATIONAL KIGOU-plus
    at_setup_line='national.at:85'
    at_desc='FUNCTION NATIONAL KIGOU-plus'
    $at_quiet $ECHO_N "102: FUNCTION NATIONAL KIGOU-plus                 $ECHO_C"
    at_xfail=no
    (
      echo "102. national.at:85: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(2).
       01 O-STR    PIC X(15).
       PROCEDURE        DIVISION.
           MOVE "+ " TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:101: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:101 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:101: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:102: ./prog"
echo national.at:102 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "＋　         " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:102: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  103 ) # 103. national.at:106: FUNCTION NATIONAL (HanKana w/ Daku-on)
    at_setup_line='national.at:106'
    at_desc='FUNCTION NATIONAL (HanKana w/ Daku-on)'
    $at_quiet $ECHO_N "103: FUNCTION NATIONAL (HanKana w/ Daku-on)       $ECHO_C"
    at_xfail=no
    (
      echo "103. national.at:106: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(24).
       01 O-STR    PIC X(24).
       PROCEDURE        DIVISION.
           MOVE "ﾚﾃﾞｨｶﾞｶﾞ" TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:122: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:122 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:122: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:123: ./prog"
echo national.at:123 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "レディガガ         " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:123: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  104 ) # 104. national.at:127: FUNCTION NATIONAL (HanKana w/ Han-daku-on)
    at_setup_line='national.at:127'
    at_desc='FUNCTION NATIONAL (HanKana w/ Han-daku-on)'
    $at_quiet $ECHO_N "104: FUNCTION NATIONAL (HanKana w/ Han-daku-on)   $ECHO_C"
    at_xfail=no
    (
      echo "104. national.at:127: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 I-STR    PIC X(15).
       01 O-STR    PIC X(15).
       PROCEDURE        DIVISION.
           MOVE "ﾎﾟﾋﾟﾝ" TO I-STR.
           MOVE FUNCTION NATIONAL(I-STR) TO O-STR.
           DISPLAY O-STR WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "national.at:143: \${COMPILE_JP_COMPAT} -x prog.cob"
echo national.at:143 >$at_check_line_file
( $at_traceon; ${COMPILE_JP_COMPAT} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:143: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "national.at:144: ./prog"
echo national.at:144 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "ポピン      " | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "national.at:144: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  105 ) # 105. mb-space.at:1: Zenkaku SPC delims in headings
    at_setup_line='mb-space.at:1'
    at_desc='Zenkaku SPC delims in headings'
    $at_quiet $ECHO_N "105: Zenkaku SPC delims in headings               $ECHO_C"
    at_xfail=no
    (
      echo "105. mb-space.at:1: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION　DIVISION.
       PROGRAM-ID.      prog.
       DATA 　　　　　 DIVISION.
       WORKING-STORAGE　 SECTION.
       01 項目 PIC X.
       PROCEDURE 　　DIVISION.
           DISPLAY "OK" WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "mb-space.at:14: \${COMPILE} -x prog.cob"
echo mb-space.at:14 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mb-space.at:14: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "mb-space.at:15: ./prog"
echo mb-space.at:15 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mb-space.at:15: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  106 ) # 106. mb-space.at:19: Zenkaku SPC delims in record def
    at_setup_line='mb-space.at:19'
    at_desc='Zenkaku SPC delims in record def'
    $at_quiet $ECHO_N "106: Zenkaku SPC delims in record def             $ECHO_C"
    at_xfail=no
    (
      echo "106. mb-space.at:19: testing ..."
      $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 項目　PIC X(40) VALUE
          "Zen SPC between item name and PIC clause".
　     01  F00 PIC X.
  　   01  F01 PIC X.
       01　F02 PIC X.
       01　F03 PIC　X.
       01　F04 PIC X　.
       PROCEDURE        DIVISION.
           DISPLAY 項目 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "mb-space.at:38: \${COMPILE} -x prog.cob"
echo mb-space.at:38 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mb-space.at:38: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "mb-space.at:39: ./prog"
echo mb-space.at:39 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "Zen SPC between item name and PIC clause" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mb-space.at:39: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;

  107 ) # 107. mb-space.at:43: Zenkaku SPC delims in COPY stmt
    at_setup_line='mb-space.at:43'
    at_desc='Zenkaku SPC delims in COPY stmt'
    $at_quiet $ECHO_N "107: Zenkaku SPC delims in COPY stmt              $ECHO_C"
    at_xfail=no
    (
      echo "107. mb-space.at:43: testing ..."
      $at_traceon


cat >inc.cpy <<'_ATEOF'

       01 項目　PIC X(2) VALUE "OK".
　     01  F00 PIC X.
  　   01  F01 PIC X.
       01　F02 PIC X.
       01　F03 PIC　X.
       01　F04 PIC X　.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY 　inc.
       PROCEDURE        DIVISION.
           DISPLAY 項目 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


$at_traceoff
echo "mb-space.at:65: \${COMPILE} -x prog.cob"
echo mb-space.at:65 >$at_check_line_file
( $at_traceon; ${COMPILE} -x prog.cob ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
$at_diff $at_devnull $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mb-space.at:65: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon

$at_traceoff
echo "mb-space.at:66: ./prog"
echo mb-space.at:66 >$at_check_line_file
( $at_traceon; ./prog ) >$at_stdout 2>$at_stder1
at_status=$?
grep '^ *+' $at_stder1 >&2
grep -v '^ *+' $at_stder1 >$at_stderr
at_failed=false
$at_diff $at_devnull $at_stderr || at_failed=:
echo >>$at_stdout; echo "OK" | $at_diff - $at_stdout || at_failed=:
case $at_status in
   77) echo 77 > $at_status_file
            exit 77;;
   0) ;;
   *) echo "mb-space.at:66: exit code was $at_status, expected 0"
      at_failed=:;;
esac
if $at_failed; then

  echo 1 > $at_status_file
  exit 1
fi

$at_traceon


      $at_traceoff
      $at_times_p && times >$at_times_file
    ) 5>&1 2>&1 | eval $at_tee_pipe
    at_status=`cat $at_status_file`
    ;;


  * )
    echo "$as_me: no such test group: $at_group" >&2
    continue
    ;;
  esac

  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd $at_suite_dir

  case $at_group in
    banner-*) ;;
    *)
      if test ! -f $at_check_line_file; then
	sed "s/^ */$as_me: warning: /" <<_ATEOF
	A failure happened in a test group before any test could be
	run. This means that test suite is improperly designed.  Please
	report this failure to <open-cobol-list@lists.sourceforge.net>.
_ATEOF
    	echo "$at_setup_line" >$at_check_line_file
      fi
      at_group_count=`expr 1 + $at_group_count`
      $at_verbose $ECHO_N "$at_group. $at_setup_line: $ECHO_C"
      echo $ECHO_N "$at_group. $at_setup_line: $ECHO_C" >> $at_group_log
      case $at_xfail:$at_status in
	yes:0)
	    at_msg="UNEXPECTED PASS"
	    at_xpass_list="$at_xpass_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
	no:0)
	    at_msg="ok"
	    at_pass_list="$at_pass_list $at_group"
	    at_errexit=false
	    ;;
	*:77)
	    at_msg="skipped (`cat $at_check_line_file`)"
	    at_skip_list="$at_skip_list $at_group"
	    at_errexit=false
	    ;;
	yes:*)
	    at_msg="expected failure (`cat $at_check_line_file`)"
	    at_xfail_list="$at_xfail_list $at_group"
	    at_errexit=false
	    ;;
	no:*)
	    at_msg="FAILED (`cat $at_check_line_file`)"
	    at_fail_list="$at_fail_list $at_group"
	    at_errexit=$at_errexit_p
	    ;;
      esac
      echo $at_msg
      at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
      case $at_status in
	0|77)
	  # $at_times_file is only available if the group succeeded.
	  # We're not including the group log, so the success message
	  # is written in the global log separately.  But we also
	  # write to the group log in case they're using -d.
	  if test -f $at_times_file; then
	    at_log_msg="$at_log_msg	(`sed 1d $at_times_file`)"
	    rm -f $at_times_file
          fi
	  echo "$at_log_msg" >> $at_group_log
	  echo "$at_log_msg" >&5

	  # Cleanup the group directory, unless the user wants the files.
	  $at_debug_p || rm -rf $at_group_dir
	  ;;
	*)
	  # Upon failure, include the log into the testsuite's global
	  # log.  The failure message is written in the group log.  It
	  # is later included in the global log.
	  echo "$at_log_msg" >> $at_group_log

	  # Upon failure, keep the group directory for autopsy, and
	  # create the debugging script.
	  {
	    echo "#! /bin/sh"
	    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\'''
	    echo "cd $at_dir"
	    echo 'exec ${CONFIG_SHELL-'"$SHELL"'}' "$0" \
	         '-v -d' "$at_debug_args" "$at_group" '${1+"$@"}'
	    echo 'exit 1'
	  } >$at_group_dir/run
	  chmod +x $at_group_dir/run
	  $at_errexit && break
	  ;;
      esac
      ;;
  esac
done

# Back to the top directory.
cd $at_dir

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`(date +%s) 2>/dev/null`
echo "$as_me: ending at: $at_stop_date" >&5
at_duration_s=`(expr $at_stop_time - $at_start_time) 2>/dev/null`
at_duration_m=`(expr $at_duration_s / 60) 2>/dev/null`
at_duration_h=`(expr $at_duration_m / 60) 2>/dev/null`
at_duration_s=`(expr $at_duration_s % 60) 2>/dev/null`
at_duration_m=`(expr $at_duration_m % 60) 2>/dev/null`
at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
if test "$at_duration" != "h m s"; then
  echo "$as_me: test suite duration: $at_duration" >&5
fi

# Wrap up the test suite with summary statistics.
at_skip_count=`set dummy $at_skip_list; shift; echo $#`
at_fail_count=`set dummy $at_fail_list; shift; echo $#`
at_xpass_count=`set dummy $at_xpass_list; shift; echo $#`
at_xfail_count=`set dummy $at_xfail_list; shift; echo $#`

at_run_count=`expr $at_group_count - $at_skip_count`
at_unexpected_count=`expr $at_xpass_count + $at_fail_count`
at_total_fail_count=`expr $at_xfail_count + $at_fail_count`

echo
cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
echo
{
  echo
  cat <<\_ASBOX
## ------------- ##
## Test results. ##
## ------------- ##
_ASBOX
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
else
  # Don't you just love exponential explosion of the number of cases?
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." ;;
    0:0:*) at_result="$at_result behaved as expected." ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_result"
  echo "$at_result" >&5
else
  echo "ERROR: $at_result" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    cat <<\_ASBOX
## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##
_ASBOX

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL $0 $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL $0 $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL $0 $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      cat <<\_ASBOX
## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##
_ASBOX
      echo
      for at_group in $at_fail_list
      do
        # Normalize the test group number.
        at_group_normalized=`expr "00000$at_group" : ".*\($at_format\)"`
        # Create a fresh directory for the next test group, and enter.
        at_group_dir=$at_suite_dir/$at_group_normalized
        at_group_log=$at_group_dir/$as_me.log
        cat $at_group_log
        echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $at_top_builddir/config.log ##
_ASBOX
      sed 's/^/| /' $at_top_builddir/config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  echo "Please send \`$as_me.log' and all information you think might help:"
  echo
  echo "   To: <open-cobol-list@lists.sourceforge.net>"
  echo "   Subject: [OpenCOBOL 1.1] $as_me:$at_fail_list${at_fail_list:+ failed${at_xpass_list:+,}}$at_xpass_list${at_xpass_list:+ passed unexpectedly}"
  echo
  if test $at_debug_p = false; then
    echo
    echo 'You may investigate any problem if you feel able to do so, in which'
    echo 'case the test suite provides a good starting point.'
    echo
  fi
    exit 1
fi

exit 0


